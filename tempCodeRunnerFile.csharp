#include<iostream>
using namespace std;
#include<stack>
class Stack{
    public:
        int prec(char op){
            if(op=='^'){
                return 3;
            }
            else if(op=='*' || op=='/'){
                return 2;
            }
            else if(op=='+' || op='-'){
                return 1;
            }
            else{
                return -1;
            }
        }
        void infixtopostfix(string s){
            stack<char> st;
            string result;
            for(int i=0; i<s.length();i++){
                char c=s[i];
                if(c>='a' && c<='z' || c>='0' && c<='9' || c>='A' && c<='Z'){
                    result+=c;
                }
                else if(c=='c'){
                    st.push(c);
                }
                else if(c==')'){
                    while(st.top='('){
                        result=result+st.top();
                        st.pop();
                    }
                    st.pop();
                }
                else{
                    while(!st.empty() && prec(s[i])<=prec(st.top())){
                        result=result+st.top();
                        st.pop();
                    }
                    st.push(c);
                }
                while(!st.empty()){
                    result=result+st.top();
                    st.pop();
                }
            }
            cout<<result;
        }
};
int main(){
    Stack obj;
    obj.infixtopostfix('K+L+(O*P/J)');
    
    return 0;
}